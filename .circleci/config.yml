version: 2.1
workflows:
  version: 2.1
  build_and_test: #workflowÂêç
    jobs:
      - test
      - formatCheck
      - stepCount
        requires:
          - release
jobs:
  test:
    docker: # See https://docs.docker.com/get-started/#docker-concepts if you are new to Docker.
      - image: circleci/openjdk:8u181-jdk-node-browsers-legacy
    steps:
      - checkout
      - run: sudo chmod +x ./gradlew
      - run: ./gradlew test
  formatCheck:
    docker:
      - image: circleci/node:8.11.3
    steps:
      - restore_cache:
          keys:
            - source-v1-{{ .Branch }}-{{ .Revision }}
            - source-v1-{{ .Branch }}-
            - source-v1-
      - checkout
      - save_cache:
          key: source-v1-{{ .Branch }}-{{ .Revision }}
          paths:
            - .git
      - restore_cache:
          key: v1-npm-deps-{{ checksum "yarn.lock" }}
      - run: yarn
      - save_cache:
          key: v1-npm-deps-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
      - run: sudo chmod +x node_modules/.bin/eslint
      - run:
          name: lint
          command: |
            mkdir -p /tmp/test-reports/eslint
            node_modules/.bin/eslint . --format junit --output-file /tmp/test-reports/eslint/results.xml
      - store_test_results:
          path: /tmp/test-reports
  stepCount:
    docker:
      - image: circleci/node:8.11.3
    steps:
      - restore_cache:
          keys:
            - source-v1-{{ .Branch }}-{{ .Revision }}
            - source-v1-{{ .Branch }}-
            - source-v1-
      - checkout
      - save_cache:
          key: source-v1-{{ .Branch }}-{{ .Revision }}
          paths:
            - .git
      - restore_cache:
          key: v1-npm-deps-{{ checksum "yarn.lock" }}
      - run: yarn
      - save_cache:
          key: v1-npm-deps-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
      - run : yarn
      - run : sudo chmod +x node_modules/.bin/cloc
      - run: ./step.sh
  release:
    docker: # See https://docs.docker.com/get-started/#docker-concepts if you are new to Docker.
      - image: circleci/openjdk:8u181-jdk-node-browsers-legacy
    steps:
      - checkout
      - run: mkdir /tmp/jarFile;
      - run: sudo chmod +x ./gradlew
      - run: ./gradlew build 
      - run: cp ./build/libs/circleCITest-0.0.1-SNAPSHOT.jar /tmp/jarFile/circleCItest.jar;

      - store_artifacts:
          path: /tmp/jarFile/circleCITest.jar;
          destination: artifact-file

      - store_artifacts:
          path: /tmp/jarFile